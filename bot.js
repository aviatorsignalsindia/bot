const TelegramBot = require("node-telegram-bot-api");
const token = "7718058336:AAEaOQZtHVMi-B9S7_cyM_5WxCAGnZnWDo0";
const bot = new TelegramBot(token, { polling: true });

let currentSignal = null; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å–∏–≥–Ω–∞–ª–∞
let signalTime = 0; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏
let countdownInterval; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
function formatTime(seconds) {
  const minutes = Math.floor(seconds / 60);
  const secs = seconds % 60;
  return `${minutes}m ${secs}s`;
}

// –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ (–ø—Ä–∏–º–µ—Ä)
function startCountdown(chatId) {
  countdownInterval = setInterval(() => {
    signalTime--;
    if (signalTime <= 0) {
      clearInterval(countdownInterval);
      currentSignal = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è
      // –£–±–∏—Ä–∞–µ–º –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
    }
  }, 1000);
}

// –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const opts = {
    reply_markup: {
      inline_keyboard: [[{ text: "Get Signal", callback_data: "get_signal" }]],
    },
  };
  bot.sendMessage(
    chatId,
    "üöÄ Welcome to the Aviator Predictor Bot!\n\nSignals are generated based on AI and mathematics. To use the signals, please register at the following link: https://1win.tz/v3/reg-form-aviator?p=2lmq and play specifically at the 1win casino, as signals will not work elsewhere.\n\nRecommendation: After doubling your bankroll, take a break for 24 hours.\n\nInstructions:\n1. Click on 'Get Signal'.\n2. Wait for the coefficient to display.\n3. Place your bet when instructed.\n4. After the signal, you can click 'Get New Signal' for the next one.",
    opts
  );
  console.log("Command /start received");
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query
bot.on("callback_query", (query) => {
  const chatId = query.message.chat.id;
  console.log("Received callback query:", query.data);

  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ currentSignal
  console.log("Current Signal before processing:", currentSignal);

  if (query.data === "get_signal" || query.data === "get_new_signal") {
    console.log(`Button '${query.data}' pressed`);
    if (!currentSignal) {
      // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      currentSignal = Math.floor(Math.random() * 10) + 1; // –ü—Ä–∏–º–µ—Ä –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
      signalTime = 180; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)

      let signalMessage = `üöÄ Signal generated! üé∞ Current coefficient: ${currentSignal}\nTime remaining: ${formatTime(
        signalTime
      )}`;
      const opts = {
        reply_markup: {
          inline_keyboard: [
            [{ text: "Get New Signal", callback_data: "get_new_signal" }],
          ],
        },
      };
      bot.sendMessage(chatId, signalMessage, opts);
      startCountdown(chatId); // –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
    } else {
      // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Å–∏–≥–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
      let remainingTimeMessage = `üöÄ Current Signal: ${currentSignal}\nTime remaining: ${formatTime(
        signalTime
      )}`;
      const opts = {
        reply_markup: {
          inline_keyboard: [
            [{ text: "Get New Signal", callback_data: "get_new_signal" }],
          ],
        },
      };
      bot.sendMessage(chatId, remainingTimeMessage, opts);
    }
  }

  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ currentSignal –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
  console.log("Current Signal after processing:", currentSignal);
});
